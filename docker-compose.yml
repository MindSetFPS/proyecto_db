version: '3'

services:
#  web:
 #   build: .
  #  ports:
   #   - "80:8000"
    #environment:
     # - DB_PASSWORD
      #- DB_HOST
      #- DB_USER
      #- DB_PORT
    # depends_on:
      # - db

    adminer:
      image: adminer
      restart: always
      ports:
        - 8083:8080

    db:
      image: mysql:latest
      restart: always
      ports:
        - 3306:3306
      environment:
        MYSQL_ROOT_PASSWORD: password
        MYSQL_DATABASE: app

  # nginx-proxy:
    # image: jwilder/nginx-proxy
    # container_name: nginx-proxy
    # ports:
      # - 80:80
      # - 443:443
    # restart: unless-stopped
    # networks:
      # - net-proxy
    # volumes:
      # - /var/run/docker.sock:/tmp/docker.sock:ro
      # - certs:/etc/nginx/certs:ro
      # - vhostd:/etc/nginx/vhost.d
      # - html:/usr/share/nginx/html
    # labels:
      # - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  # letsencrypt:
    # image: jrcs/letsencrypt-nginx-proxy-companion:v1.12
    # container_name: letsencrypt
    # restart: unless-stopped
    # environment:
      # - NGINX_PROXY_CONTAINER=nginx-proxy
      # - DEFAULT_EMAIL=test@gmail.com
    # networks:
      # - net-proxy
    # volumes:
      # - certs:/etc/nginx/certs:rw
      # - vhostd:/etc/nginx/vhost.d
      # - html:/usr/share/nginx/html
      # - acme:/etc/acme.sh
      # - /var/run/docker.sock:/var/run/docker.sock:ro
